name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build app micro videos
      run: docker build . --file Dockerfile.prod --tag app_micro_videos:latest
    - name: Build db micro videos
      run: docker build .docker/mysql --file .docker/mysql/Dockerfile --tag db_micro_videos:latest
    - name: Setup network
      run: docker network create -d bridge app_network
    - name: Setup db volume
      run: docker volume create db_micro_videos_v
    - name: Run db micro videos
      run: docker run --name c_micro_videos_db --network app_network --rm -itd --volume db_micro_videos_v:/var/lib/mysql -e "MYSQL_ROOT_PASSWORD=root" db_micro_videos:latest
    - name: Run redis micro videos
      run: docker run --name c_micro_videos_redis --network app_network --rm -itd redis:alpine
    - name: Run app micro videos
      run: docker run --name c_micro_videos_app --network app_network --rm -itd -e "_DB_HOST=db" -e "_DB_DATABASE=code_micro_videos" -e "_DB_DATABASE_TEST=code_micro_videos_test" -e "_DB_USERNAME=root" -e "_DB_PASSWORD=root" --entrypoint="php-pfm" app_micro_videos:latest
    - name: Create environment
      run: docker exec -u 0 c_micro_videos_app dockerize -template /var/www/.docker/app/.env:.env -template /var/www/.docker/app/.env.testing:.env.testing
    - name: Setup user
      run: docker exec -u 0 c_micro_videos_app chown -R www-data:www-data .
    - name: Setup permissions
      run: docker exec -u 0 c_micro_videos_app chmod 777 -R storage/
    - name: Composer setup
      run: docker exec c_micro_videos_app composer install
    - name: Key setup
      run: docker exec c_micro_videos_app php artisan key:generate
    - name: Run Migrations
      run: docker exec c_micro_videos_app php artisan migrate
    - name: Run tests
      run: docker exec c_micro_videos_app php artisan test
